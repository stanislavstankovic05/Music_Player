<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PlaylistDataSet" targetNamespace="http://tempuri.org/PlaylistDataSet.xsd" xmlns:mstns="http://tempuri.org/PlaylistDataSet.xsd" xmlns="http://tempuri.org/PlaylistDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PlaylistConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PlaylistConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Dystopia_music_player_.Properties.Settings.GlobalReference.Default.PlaylistConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlaylistTableAdapter" GeneratorDataComponentClassName="PlaylistTableAdapter" Name="Playlist" UserDataComponentName="PlaylistTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PlaylistConnectionString (Settings)" DbObjectName="dbo.Playlist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Playlist] WHERE (([IdPlaylist] = @Original_IdPlaylist) AND ([Melodie.IdMelodie] = @p2))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdPlaylist" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPlaylist" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@p2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Melodie.IdMelodie" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Playlist] ([IdPlaylist], [Melodie.IdMelodie]) VALUES (@IdPlaylist, @p1);
SELECT IdPlaylist, [Melodie.IdMelodie] FROM Playlist WHERE (IdPlaylist = @IdPlaylist)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdPlaylist" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPlaylist" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@p1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Melodie.IdMelodie" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdPlaylist, [Melodie.IdMelodie] FROM dbo.Playlist</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Playlist] SET [IdPlaylist] = @IdPlaylist, [Melodie.IdMelodie] = @p1 WHERE (([IdPlaylist] = @Original_IdPlaylist) AND ([Melodie.IdMelodie] = @p2));
SELECT IdPlaylist, [Melodie.IdMelodie] FROM Playlist WHERE (IdPlaylist = @IdPlaylist)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdPlaylist" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPlaylist" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@p1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Melodie.IdMelodie" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdPlaylist" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPlaylist" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@p2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Melodie.IdMelodie" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdPlaylist" DataSetColumn="IdPlaylist" />
              <Mapping SourceColumn="Melodie.IdMelodie" DataSetColumn="Melodie_IdMelodie" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PlaylistDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="PlaylistDataSet" msprop:Generator_DataSetName="PlaylistDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Playlist" msprop:Generator_RowEvHandlerName="PlaylistRowChangeEventHandler" msprop:Generator_RowDeletedName="PlaylistRowDeleted" msprop:Generator_RowDeletingName="PlaylistRowDeleting" msprop:Generator_RowEvArgName="PlaylistRowChangeEvent" msprop:Generator_TablePropName="Playlist" msprop:Generator_RowChangedName="PlaylistRowChanged" msprop:Generator_RowChangingName="PlaylistRowChanging" msprop:Generator_TableClassName="PlaylistDataTable" msprop:Generator_RowClassName="PlaylistRow" msprop:Generator_TableVarName="tablePlaylist" msprop:Generator_UserTableName="Playlist">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdPlaylist" msprop:Generator_ColumnPropNameInRow="IdPlaylist" msprop:Generator_ColumnPropNameInTable="IdPlaylistColumn" msprop:Generator_ColumnVarNameInTable="columnIdPlaylist" msprop:Generator_UserColumnName="IdPlaylist" type="xs:int" />
              <xs:element name="Melodie_IdMelodie" msprop:Generator_ColumnPropNameInRow="Melodie_IdMelodie" msprop:Generator_ColumnPropNameInTable="Melodie_IdMelodieColumn" msprop:Generator_ColumnVarNameInTable="columnMelodie_IdMelodie" msprop:Generator_UserColumnName="Melodie_IdMelodie" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Playlist" />
      <xs:field xpath="mstns:IdPlaylist" />
    </xs:unique>
  </xs:element>
</xs:schema>