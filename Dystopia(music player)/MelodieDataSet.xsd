<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MelodieDataSet" targetNamespace="http://tempuri.org/MelodieDataSet.xsd" xmlns:mstns="http://tempuri.org/MelodieDataSet.xsd" xmlns="http://tempuri.org/MelodieDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MelodieConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MelodieConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Dystopia_music_player_.Properties.Settings.GlobalReference.Default.MelodieConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MelodieTableAdapter" GeneratorDataComponentClassName="MelodieTableAdapter" Name="Melodie" UserDataComponentName="MelodieTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MelodieConnectionString (Settings)" DbObjectName="dbo.Melodie" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Melodie] WHERE (([IdMelodie] = @Original_IdMelodie) AND ([path] = @Original_path) AND ([playlist] = @Original_playlist))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdMelodie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdMelodie" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_path" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="path" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_playlist" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="playlist" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Melodie] ([IdMelodie], [path], [playlist]) VALUES (@IdMelodie, @path, @playlist);
SELECT IdMelodie, path, playlist FROM Melodie WHERE (IdMelodie = @IdMelodie)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdMelodie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdMelodie" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@path" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="path" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@playlist" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="playlist" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdMelodie, path, playlist FROM dbo.Melodie</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Melodie] SET [IdMelodie] = @IdMelodie, [path] = @path, [playlist] = @playlist WHERE (([IdMelodie] = @Original_IdMelodie) AND ([path] = @Original_path) AND ([playlist] = @Original_playlist));
SELECT IdMelodie, path, playlist FROM Melodie WHERE (IdMelodie = @IdMelodie)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdMelodie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdMelodie" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@path" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="path" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@playlist" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="playlist" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdMelodie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdMelodie" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_path" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="path" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_playlist" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="playlist" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdMelodie" DataSetColumn="IdMelodie" />
              <Mapping SourceColumn="path" DataSetColumn="path" />
              <Mapping SourceColumn="playlist" DataSetColumn="playlist" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="MelodieConnectionString (Settings)" DbObjectName="dbo.insert_melodie" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="insert_melodie" MethodsParameterType="CLR" Modifier="Public" Name="insert_melodie" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="insert_melodie">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.insert_melodie</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@IdMelodie" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@path" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@playlist" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MelodieDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="MelodieDataSet" msprop:Generator_DataSetName="MelodieDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Melodie" msprop:Generator_RowEvHandlerName="MelodieRowChangeEventHandler" msprop:Generator_RowDeletedName="MelodieRowDeleted" msprop:Generator_RowDeletingName="MelodieRowDeleting" msprop:Generator_RowEvArgName="MelodieRowChangeEvent" msprop:Generator_TablePropName="Melodie" msprop:Generator_RowChangedName="MelodieRowChanged" msprop:Generator_RowChangingName="MelodieRowChanging" msprop:Generator_TableClassName="MelodieDataTable" msprop:Generator_RowClassName="MelodieRow" msprop:Generator_TableVarName="tableMelodie" msprop:Generator_UserTableName="Melodie">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdMelodie" msprop:Generator_ColumnPropNameInRow="IdMelodie" msprop:Generator_ColumnPropNameInTable="IdMelodieColumn" msprop:Generator_ColumnVarNameInTable="columnIdMelodie" msprop:Generator_UserColumnName="IdMelodie" type="xs:int" />
              <xs:element name="path" msprop:Generator_ColumnPropNameInRow="path" msprop:Generator_ColumnPropNameInTable="pathColumn" msprop:Generator_ColumnVarNameInTable="columnpath" msprop:Generator_UserColumnName="path">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1000" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="playlist" msprop:Generator_ColumnPropNameInRow="playlist" msprop:Generator_ColumnPropNameInTable="playlistColumn" msprop:Generator_ColumnVarNameInTable="columnplaylist" msprop:Generator_UserColumnName="playlist" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Melodie" />
      <xs:field xpath="mstns:IdMelodie" />
    </xs:unique>
  </xs:element>
</xs:schema>